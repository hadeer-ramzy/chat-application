#pragma checksum "F:\GitHubRepos\chat-application\SignalrDocumentation\chatWithAuthentication\Views\Chat\ChatPrivateTrial.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "8ad69bf2c37c7ac85e794caeb4c177a1f1944344db6f5348b300b985dd38e5ba"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Chat_ChatPrivateTrial), @"mvc.1.0.view", @"/Views/Chat/ChatPrivateTrial.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\GitHubRepos\chat-application\SignalrDocumentation\chatWithAuthentication\Views\_ViewImports.cshtml"
using chatWithAuthentication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\GitHubRepos\chat-application\SignalrDocumentation\chatWithAuthentication\Views\_ViewImports.cshtml"
using ChatWithAuth.DAL.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "F:\GitHubRepos\chat-application\SignalrDocumentation\chatWithAuthentication\Views\_ViewImports.cshtml"
using chatWithAuthentication.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"8ad69bf2c37c7ac85e794caeb4c177a1f1944344db6f5348b300b985dd38e5ba", @"/Views/Chat/ChatPrivateTrial.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"44664f8205915487af475e71d5a211674525ed668793b81045a1face22200e15", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Chat_ChatPrivateTrial : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "F:\GitHubRepos\chat-application\SignalrDocumentation\chatWithAuthentication\Views\Chat\ChatPrivateTrial.cshtml"
  
    ViewData["Title"] = "ChatPrivateTrial";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<h1>ChatPrivateTrial</h1>\r\n<h2 id=\"name\">");
#nullable restore
#line 8 "F:\GitHubRepos\chat-application\SignalrDocumentation\chatWithAuthentication\Views\Chat\ChatPrivateTrial.cshtml"
         Write(ViewData["RecieverName"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h2>\r\n<input id=\"input\" type=\"text\"/>\r\n<button id=\"btn\" class=\"btn btn-primary\">send</button>\r\n<ol id=\"list\">\r\n    <li>Chat list</li>\r\n</ol>\r\n\r\n");
            DefineSection("js", async() => {
                WriteLiteral(@"
    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withUrl(""/chatter"")
            .build();


        connection.on(""NewMsg"", function (content, date) {
            var li = document.createElement(""li"");
            li.textContent = `${content} at ${date}`;
            document.getElementById(""list"").appendChild(li);
        });

        //document.getElementById(""clickS"").addEventListener(""click"", async (event) => {
        //    var msg = document.getElementById(""write-message"").value;
        //    try {
        //        var n = document.getElementsByClassName(""name"")[0].innerHTML
        //        await connection.invoke(""SendMessagePrivate"", n, msg);
        //    }
        //    catch (e) {
        //        console.error(e.toString());
        //    }
        //    event.preventDefault();
        //});
        document.getElementById(""btn"").addEventListener(""click"", async (event) => {
            var msg = document.getElementById(""input"").v");
                WriteLiteral(@"alue;
            try {
                var n = document.getElementById(""name"").innerHTML
                await connection.invoke(""SendMessagePrivate"", n, msg);
            }
            catch (e) {
                console.error(e.toString());
            }
            event.preventDefault();
        });

        (async () => {
            try {
                await connection.start();
            }
            catch (e) {
                console.error(e.toString());
            }
        })();
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
